sudo docker secret --help
sudo docker secret ls
echo cmentarnapolka | docker secret create mysql_root_password -

vi mysql.yml

version: '3.1'
services:
  mysql:
    image: mysql
    environment: 
      MYSQL_USER: wordpress
      MYSQL_DATABASE: wordpress
      # MYSQL_ROOT_PASSWORD: root
    secrets:
      - root_password
    deploy:
      placement:
        constraints:
          - node.role==manager
secrets:
  mysql_root_password:
    external: true
    
sudo docker stack deploy -c mysql.yml
docker stack ps mysql
docker service logs mysql_mysql

vi mysql.yml

version: '3.1'
services:
  mysql:
    image: mysql
    environment: 
      MYSQL_USER: wordpress
      MYSQL_DATABASE: wordpress
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      # MYSQL_ROOT_PASSWORD: root
    secrets:
      - root_password
    deploy:
      placement:
        constraints:
          - node.role==manager       
secrets:
  mysql_root_password:
    external: true

sudo docker stack deploy -c mysql.yml
sudo docker stack ps mysql

# DostÄ™p do secret

sudo docker ps
docker exec -it [ID] bash
  cd run
  cd secrets
  ls
  cat mysql_root_password
  exit

# Finalna rekonfiguracja MySQL

vi mysql.yml

version: '3.1'
services:
  mysql:
    image: mysql
    environment: 
      MYSQL_USER: wordpress
      MYSQL_DATABASE: wordpress
      MYSQL_ROOT_PASSWORD_FILE: "/run/secrets/mysql_root_password"
    secrets:
      - root_password
    deploy:
      placement:
        constraints:
          - node.role==manager       
secrets:
  mysql_root_password:
    external: true

sudo docker stack deploy -c mysql.yml mysql
sudo docker ps
docker exec -it [ID] bash
  mysql -u root -p
    show databeses;
    exit
  exit
